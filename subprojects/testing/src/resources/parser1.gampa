rootSymbol S;

patterns {
    'id' <-- "[a-zA-Z_][a-zA-Z0-9_]*";
    'number' <-- "[0-9]+\.?[0-9]*";

    # Operators
    '+' <-- "\+";
    '*' <-- "\*";
    '-' <-- "-";
    '/' <-- "/";
    '^' <-- "^";
    '|' <-- "\|";
    '&' <-- "&";
    '!' <-- "!";
    '=' <-- "=";

    ';' <-- ";";

    'comparison' <-- "<|>|<=|>=|!=";

    'leftpar' <-- "\(";
    'rightpar' <-- "\)";

    'blank' <-- "\s+";

    'comment' <-- r"#[^\n]*+\n";

    'comment-multiline' <-- r"/\*.*\*/";
}

rules{
    S => Program;
    "program" : Program => Assignement*;
    "assignment" : Assignement => 'id' '=' Expression ';';
 
    "biop" : Expression => (Expression '+')? Term;
    "biop" : Term => (Term '-')? Member;
    "biop" :  Member => '-'? AbsMember;
    "biop" : AbsMember => (AbsMember '*')? Factor;
    "biop" : Factor => (Factor '/')? Base;
    "biop" : Base => Unit ('^' Base)?;
    "paren" : Unit => 'leftpar' Expression 'rightpar';
    "var" : Unit => 'id';
    "number" : Unit => 'number';
 }